{"version":3,"sources":["webpack://ElementMeasurer/webpack/universalModuleDefinition","webpack://ElementMeasurer/webpack/bootstrap","webpack://ElementMeasurer/./src/element-measurer.ts"],"names":[],"mappings":"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","file":"element-measurer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ElementMeasurer\"] = factory();\n\telse\n\t\troot[\"ElementMeasurer\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/element-measurer.ts\");\n","export type AllowedTarget = HTMLElement|Element|Window|Document|string;\n\n/**\n * Expressions top and left offset values.\n *\n * @export\n * @interface Offsets\n */\nexport interface Offsets {\n  top: number;\n  left: number;\n}\n\n/**\n * The library class that can measures size of element.\n *\n * @export\n * @class ElementMeasurer\n */\nexport class ElementMeasurer {\n  target: HTMLElement;\n\n  /**\n   * Creates an instance of ElementMeasurer.\n   * @param {AllowedTarget} [target=document.documentElement]\n   * @memberof ElementMeasurer\n   */\n  constructor(target: AllowedTarget = document.documentElement) {\n    this.setTarget(target);\n  }\n\n  /**\n   * Returns whether target is document or html element.\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof ElementMeasurer\n   */\n  get isDocument(): boolean {\n    return this.target === document.documentElement\n      || this.target === document.body;\n  }\n\n  /**\n   * Returns inner width of an element in pixels.\n   *\n   * @readonly\n   * @type {number}\n   * @memberof ElementMeasurer\n   */\n  get clientWidth(): number {\n    return this.isDocument\n      ? window.innerWidth\n      : this.target.getBoundingClientRect().width;\n  }\n\n  /**\n   * Returns inner height of an element in pixels.\n   *\n   * @readonly\n   * @type {number}\n   * @memberof ElementMeasurer\n   */\n  get clientHeight(): number {\n    return this.isDocument\n      ? window.innerHeight\n      : this.target.getBoundingClientRect().height;\n  }\n\n  /**\n   * Gets or sets the number of pixels that an element's content is scrolled vertically.\n   *\n   * @type {number}\n   * @memberof ElementMeasurer\n   */\n  get scrollTop(): number {\n    return this.isDocument ? window.pageYOffset : this.target.scrollTop;\n  }\n\n  set scrollTop(val) {\n    if (this.isDocument) {\n      window.scrollTo(this.scrollLeft, val);\n    } else {\n      this.target.scrollTop = val;\n    }\n  }\n\n  /**\n   * Gets or sets the number of pixels that an element's content is scrolled to the left.\n   *\n   * @type {number}\n   * @memberof ElementMeasurer\n   */\n  get scrollLeft(): number {\n    return this.isDocument ? window.pageXOffset : this.target.scrollLeft;\n  }\n\n  set scrollLeft(val) {\n    if (this.isDocument) {\n      window.scrollTo(val, this.scrollTop);\n    } else {\n      this.target.scrollLeft = val;\n    }\n  }\n\n  /**\n   * Returns the width of the entire content of an element.\n   *\n   * @readonly\n   * @type {number}\n   * @memberof ElementMeasurer\n   */\n  get scrollWidth(): number {\n    return this.target.scrollWidth;\n  }\n\n  /**\n   * Returns the height of the entire content of an element.\n   *\n   * @readonly\n   * @type {number}\n   * @memberof ElementMeasurer\n   */\n  get scrollHeight(): number {\n    return this.target.scrollHeight;\n  }\n\n  /**\n   * Returns maximum top scroll offset possible for the element.\n   *\n   * @readonly\n   * @type {number}\n   * @memberof ElementMeasurer\n   */\n  get maxScrollTop(): number {\n    return this.scrollHeight - this.clientHeight;\n  }\n\n  /**\n   * Returns maximum left scroll offset possible for the element.\n   *\n   * @readonly\n   * @type {number}\n   * @memberof ElementMeasurer\n   */\n  get maxScrollLeft(): number {\n    return this.scrollWidth - this.clientWidth;\n  }\n\n  /**\n   * Set target element.\n   *\n   * @param {AllowedTarget} val target element.\n   * @returns {this}\n   * @memberof ElementMeasurer\n   */\n  setTarget(val: AllowedTarget): this {\n    if (val instanceof HTMLElement || val instanceof Element) {\n      this.target = val as HTMLElement;\n    } else if (val === window || val === document) {\n      this.target = document.documentElement;\n    } else if (typeof val === 'string') {\n      this.target = document.querySelector(val);\n    } else {\n      throw new TypeError('Target value is not correct type.');\n    }\n    return this;\n  }\n\n  /**\n   * Returns top and left values that indicates offset distance to html document.\n   * @see https://stackoverflow.com/questions/442404/retrieve-the-position-x-y-of-an-html-element#answer-442474\n   * @returns {Offsets} {top, left}\n   * @memberof ElementMeasurer\n   */\n  getOffset(): Offsets {\n    let elm = this.target;\n    let top = 0;\n    let left = 0;\n\n    while (elm && !isNaN(elm.offsetLeft) && !isNaN(elm.offsetTop)) {\n      left += elm.offsetLeft - elm.scrollLeft;\n      top += elm.offsetTop - elm.scrollTop;\n      elm = elm.offsetParent as HTMLElement;\n    }\n\n    return { top, left };\n  }\n}\n\nexport default ElementMeasurer;\n"],"sourceRoot":""}